info:
  title: My api
  version: '1.0'
paths:
  /api/file/{filename}:
    get:
      operationId: getFile
      tags:
        - File
      description: Get file by filename
      summary: Get file
      parameters:
        - name: filename
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get file success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
  /api/file:
    post:
      operationId: uploadFile
      tags:
        - File
      description: Upload file
      summary: Upload file
      parameters:
        - name: hl
          in: path
          schema: &ref_0
            type: string
            enum:
              - ko
              - en
              - vi
            default: en
      requestBody:
        description: Upload multiple file
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Success
        '400':
          description: Parameters fail
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
  /api/image/{filename}:
    get:
      operationId: getImage
      tags:
        - Image
      description: Get image by filename
      summary: Get image
      parameters:
        - name: filename
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get image success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
  /api/image:
    post:
      operationId: uploadImage
      tags:
        - Image
      description: Upload image
      summary: Upload image
      parameters:
        - name: hl
          in: path
          schema: *ref_0
      requestBody:
        description: Upload multiple image
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                width:
                  type: integer
                height:
                  type: integer
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Success
        '400':
          description: Parameters fail
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
  /api/v1/coin/history:
    get:
      operationId: getMyHistoryCoin
      tags:
        - Coin
      description: Get hisotory coins of the user himself
      summary: Get hisotory coins of the user himself
      parameters:
        - name: hl
          in: query
          schema: *ref_0
        - name: select
          in: query
          schema: &ref_1
            type: string
            default: '["$all"]'
          description: |2-

                    Example : select=["$all"]
                
        - name: where
          in: query
          schema: &ref_2
            type: string
            default: '{}'
          description: |2-

                    Example : where={"name":{"contains":"Minh"}}
                
        - name: limit
          in: query
          schema: &ref_3
            type: string
            default: unlimited
          description: |2-

                    Example : limit=50
                            : limit=unlimited
                
        - name: page
          in: query
          schema: &ref_4
            type: string
            default: '1'
        - name: order
          in: query
          schema: &ref_5
            type: string
            default: '[]'
          description: |2-

                    Example : order=[{"updatedAt":"asc"}]
                    
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinHistoryPagingResponse'
          description: Response coin history success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
      security:
        - bearerAuth: []
  /api/v1/coin/total:
    get:
      operationId: getMyTotalCoin
      tags:
        - Coin
      description: Total number of coins of the user himself
      summary: Total number of coins of the user himself
      parameters:
        - name: hl
          in: query
          schema: *ref_0
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCoinResponse'
          description: Get total point success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
      security:
        - bearerAuth: []
  /api/v1/coin/admin:
    post:
      operationId: adminCreatePointForUser
      tags:
        - Coin
      description: Admin create point for user
      summary: Admin create point for user
      parameters:
        - name: hl
          in: query
          schema: *ref_0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointForUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCoinResponse'
          description: Register success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
      security:
        - bearerAuth: []
  /api/v1/provider:
    post:
      operationId: becomeProvider
      tags:
        - Provider
      description: Register become provider
      summary: Register become provider
      parameters:
        - name: hl
          in: query
          schema: *ref_0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BecomeProviderRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BecomeProviderResponse'
          description: Register success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
      security:
        - bearerAuth: []
  /api/v1/providerSkill:
    post:
      operationId: createProviderSkill
      tags:
        - ProviderSkill
      description: Register become providerSkill
      summary: Register become providerSkill
      parameters:
        - name: hl
          in: query
          schema: *ref_0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderSkillRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderSkillRequest'
          description: Register success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
      security:
        - bearerAuth: []
  /api/v1/skill:
    get:
      operationId: findAndCountAll
      tags:
        - Skill
      description: Create Skill
      summary: Get all skills
      parameters:
        - name: hl
          in: query
          schema: *ref_0
        - name: select
          in: query
          schema: *ref_1
          description: |2-

                    Example : select=["$all"]
                
        - name: where
          in: query
          schema: *ref_2
          description: |2-

                    Example : where={"name":{"contains":"Minh"}}
                
        - name: limit
          in: query
          schema: *ref_3
          description: |2-

                    Example : limit=50
                            : limit=unlimited
                
        - name: page
          in: query
          schema: *ref_4
        - name: order
          in: query
          schema: *ref_5
          description: |2-

                    Example : order=[{"updatedAt":"asc"}]
                    
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSkillRequest'
          description: Create Skill success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
      security:
        - bearerAuth: []
    post:
      operationId: createSkill
      tags:
        - Skill
      description: Create Skill
      summary: Create Skill
      parameters:
        - name: hl
          in: query
          schema: *ref_0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSkillRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSkillRequest'
          description: Create Skill success
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: 500 Internal Server Error Response
      security:
        - bearerAuth: []
tags:
  - name: File
  - name: Image
  - name: Coin
  - name: Provider
  - name: ProviderSkill
  - name: Skill
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PointForUserRequest:
      type: object
      properties:
        amount:
          type: number
          description: Amount
          example: 10
        userId:
          type: string
          description: User Id
          example: 7d8c6f10-3eaf-4173-a7c6-f817ebfa71fa
      required:
        - amount
        - userId
      description: User registor become provider
    PaginationResponse:
      type: object
      properties:
        currentPage:
          type: number
          description: Current page
          example: 2
        nextPage:
          type: number
          description: Next page
          example: 3
        prevPage:
          type: number
          description: Previous page
        limit:
          type: object
          description: Limit
          example: 50
      required: []
    CoinHistoryPagingResponse:
      type: object
      properties:
        rows:
          type: array
          description: Row
          example:
            - id: c8b6a728-6db6-42e6-b050-92ab31ced664
              createdAt: '2023-05-10T10:13:19.401Z'
              updatedAt: '2023-05-10T10:13:19.401Z'
              deletedAt: null
              userId: 7d8c6f10-3eaf-4173-a7c6-f817ebfa71fa
              coinType: ADMIN
              amount: 10
              createdId: c46c8037-0969-47d1-9337-e35571c87305
            - id: f3ec70d2-549c-454f-b5bc-caf92f7240be
              createdAt: '2023-05-10T10:14:38.564Z'
              updatedAt: '2023-05-10T10:14:38.564Z'
              deletedAt: null
              userId: 7d8c6f10-3eaf-4173-a7c6-f817ebfa71fa
              coinType: ADMIN
              amount: 10
              createdId: c46c8037-0969-47d1-9337-e35571c87305
          items:
            $ref: '#/components/schemas/CoinHistoryPagingResponse'
        count:
          type: number
          description: Count
          example: 100
        pagination:
          type: STRING
          description: Pagination
          example:
            currentPage: 2
            nextPage: 3
            prevPage: 1
            limit: 2
          $ref: '#/components/schemas/PaginationResponse'
      required: []
      description: Coin History response
    UserCoinResponse:
      type: object
      properties:
        userId:
          type: string
          description: User id
          example: 9fa9f3c5-640a-407f-b64f-12ff6f55e15c
        totalCoin:
          type: number
          description: Total coin of user
          example: 1000
      required:
        - userId
        - totalCoin
      description: User coin response
    BecomeProviderRequest:
      type: object
      properties:
        slug:
          type: string
          description: Slug url
          example: do_tran_minh_chu
        name:
          type: string
          description: Display name of provider
          example: Đỗ Trần Minh Chu
        avatarUrl:
          type: string
          description: Avatart Url of provider
          example: >-
            https://cdn.pixabay.com/photo/2020/05/11/22/31/cat-5160456_960_720.png
        voiceUrl:
          type: string
          description: Url mp3
          example: >-
            https://files.playerduo.net/production/audio_voices/79eb9c87-917c-4331-88f8-7a04d2c2712b__83a27d00-e0a2-11eb-8c44-9f18adc4e12c__audio_voice.mp3
        description:
          type: string
          description: Description
          example: This is description about me <3
      required:
        - slug
        - name
        - avatarUrl
        - voiceUrl
        - description
      description: User registor become provider
    BecomeProviderResponse:
      type: object
      properties:
        id:
          type: string
          description: Id's provider
          example: a1da9857-355e-43f1-8fdb-26a8a0ace6bd
        createdAt:
          type: date
          description: Created At
          example: '2023-05-10T07:08:46.083Z'
        updatedAt:
          type: date
          description: Update At
          example: '2023-05-10T07:08:46.083Z'
        deletedAt:
          type: date
          description: Deleted At
        userId:
          type: string
          description: Id's user
          example: a1da9857-355e-43f1-8fdb-26a8a0ace6bd
        slug:
          type: string
          description: Slug url
          example: do_tran_minh_chu
        name:
          type: string
          description: Display name of provider
          example: Đỗ Trần Minh Chu
        avatarUrl:
          type: string
          description: Avatart Url of provider
          example: >-
            https://cdn.pixabay.com/photo/2020/05/11/22/31/cat-5160456_960_720.png
        voiceUrl:
          type: string
          description: Url mp3
          example: >-
            https://files.playerduo.net/production/audio_voices/79eb9c87-917c-4331-88f8-7a04d2c2712b__83a27d00-e0a2-11eb-8c44-9f18adc4e12c__audio_voice.mp3
        description:
          type: string
          description: Description
          example: This is description about me <3
      required:
        - id
        - userId
        - slug
        - name
        - avatarUrl
        - voiceUrl
        - description
      description: User registor become provider response
    BookingCostProviderSkillRequest:
      type: object
      properties:
        startTimeOfDay:
          type: string
          description: The start time that this charge is in effect
          example: '09:00'
        endTimeOfDay:
          type: string
          description: The end time that this charge is in effect
          example: '15:00'
        amount:
          type: number
          description: Amount coin
          example: 10
      required:
        - startTimeOfDay
        - endTimeOfDay
        - amount
      description: Booking cost provider skill request
    ProviderSkillRequest:
      type: object
      properties:
        skillId:
          type: string
          description: Skill Id
          example: 9fa9f3c5-640a-407f-b64f-12ff6f55e15c
        defaultCost:
          type: number
          description: Default cost
          example: 8
        bookingCosts:
          type: array
          description: Booking Cost
          example:
            - startTimeOfDay: '09:00'
              endTimeOfDay: '15:00'
              amount: 10
          items:
            $ref: '#/components/schemas/BookingCostProviderSkillRequest'
      required:
        - skillId
        - defaultCost
      description: Provider skill request
    CreateSkillRequest:
      type: object
      properties:
        name:
          type: string
          description: Skill name
          example: Liên Minh Huyền Thoại
        imageUrl:
          type: string
          description: Image url of skill
          example: >-
            https://cdn.tgdd.vn/2020/06/content/hinh-nen-lien-minh-huyen-thoai-dep-mat-cho-pc-va-dien-thoai-background-800x450.jpg
      required:
        - name
        - imageUrl
      description: Create skill request
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: Sorry! Something went wrong.
        type:
          type: string
          description: Error message
          example: router_exception_something_went_wrong
        code:
          type: number
          description: Error code
          example: 500
      required:
        - message
        - type
        - code
      description: Error Response`
  parameters: {}
openapi: 3.0.0
externalDocs:
  url: My url
